from typing import List, Optional, Sequence, Tuple, Union
from NXOpen import Builder, DisplayableObject, Matrix3x3, NXObject, Part, Point3d
import NXOpen

class Component(DisplayableObject):
    def GetChildren(self) -> Sequence[Component]: ...
    def GetPosition(self)->Tuple[Point3d, Matrix3x3]:...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Name(self) -> str: ...
    def SetLayerOption(self, layer: int) -> None: ...
    @property
    def IsSuppressed(self) -> bool: ...
    @property
    def Parent(self) -> Component: ...
    def Suppress(self) -> None: ...
    def Unsuppress(self) -> None: ...
    @property
    def DirectOwner(self) -> ComponentAssembly: ...
    def HasInstanceUserAttribute(self, title:str, attribute_type:NXOpen.NXObject.AttributeType, index:int)->bool:...
    @property
    def ReferenceSet(self)->str:...

class ComponentAssembly:
    @property
    def RootComponent(self) -> Component: ...
    def ReplaceReferenceSet(self, cmp:Component, name:str)->None:...

class ReplaceComponentBuilder(Builder):
    pass
